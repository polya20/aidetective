generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
  tools         Tools[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Pricing {
  free
  paid
  free_trail
  free_trail_no_card
}

model ImageURLs {
  imageURLId String @id @default(cuid())
  imageURL   String
  toolId     String
  tool       Tools  @relation(fields: [toolId], references: [toolId])
}

model PossibleUseCase {
  possibleUseCaesId String @id @default(cuid())
  description       String
  toolId            String
  tool              Tools  @relation(fields: [toolId], references: [toolId])
}

model Tools {
  toolId          String            @id @unique @default(cuid())
  slug            String            @unique
  name            String
  summary         String
  description     String
  websiteURL      String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  featuredAt      DateTime?
  pricing         Pricing           @default(free)
  isToolPublished Boolean           @default(false)
  appStoreURL     String?
  playStoreURL    String?
  possibleUseCase PossibleUseCase[]
  imageURLs       ImageURLs[]
  tags            Tags[]
  userId          String
  user            User              @relation(fields: [userId], references: [id])
}

model Tags {
  tagId     String   @id @unique @default(cuid())
  slug      String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tools     Tools[]
}
